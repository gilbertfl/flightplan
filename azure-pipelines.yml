
# Variables needed:
#   - azureSubscription
#   - clientWebAppName
#   - serverWebAppName
#   - serverUrl
#   - location
#   - resourceGroup
#   - remoteChromeName
#   - SQLSERVERURL
#   - SQLUSER
#   - SQLPASS
#   - SQLDBNAME

trigger:
  batch: true
  branches:
    include:
    - master

stages:
- stage: FlightPlan_Client
  dependsOn: []
  displayName: 'FlightPlan Client'
  jobs:
  - job: Build_Client
    displayName: 'Build Client'
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - download: none
    - task: Npm@1
      displayName: 'npm install client'
      inputs:
        workingDir: client
        verbose: false
    - task: Npm@1
      displayName: 'npm build client'
      inputs:
        command: custom
        workingDir: client
        verbose: false
        customCommand: 'run build'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: client'
      inputs:
        PathtoPublish: client/build
        ArtifactName: client
  - job: Deploy_Client
    displayName: 'Deploy Client'
    dependsOn: Build_Client
    condition: succeeded('Build_Client')
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none
    - download: current
      artifact: 'client'
    - bash: 'sed -i ''s@"/api@"$(serverUrl)/api@g'' $(Pipeline.Workspace)/client/static/js/main*.js'
      displayName: 'Replace API URL with Specified Server URL'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure App Service Deploy'
      inputs:
        azureSubscription: '$(azureSubscription)'
        WebAppName: '$(clientWebAppName)'
        packageForLinux: '$(Pipeline.Workspace)/client'
        # enableCustomDeployment: true
        # DeploymentType: zipDeploy

- stage: FlightPlan_Server
  dependsOn: []
  displayName: 'FlightPlan Server'
  jobs:
  - job: Server
    displayName: 'Server'
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - download: none
    - task: Npm@1
      inputs:
        command: 'install'
    - task: CmdLine@2
      displayName: 'DELETE ME: check directory'
      inputs:
        script: 'ls $(Pipeline.Workspace)/s'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure App Service Deploy'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(azureSubscription)'
        appType: 'webApp'
        WebAppName: '$(serverWebAppName)'
        packageForLinux: '$(Pipeline.Workspace)/s'
        AppSettings: '-PUPPETEER_SKIP_CHROMIUM_DOWNLOAD "true" -REMOTECHROME "http://$(remoteChromeName).$(location).azurecontainer.io:3000" -SQLSERVERURL "$(SQLSERVERURL)" -SQLUSER "$(SQLUSER)" -SQLPASS "$(SQLPASS)" -SQLDBNAME "$(SQLDBNAME)" -CREDENTIALS "$(CREDENTIALS)"'
        enableCustomDeployment: true
        DeploymentType: 'zipDeploy'
    
- stage: Remote_Chrome_Docker
  dependsOn: []
  displayName: 'Remote Chrome Docker'
  jobs:
  - job: Browserless_Chrome_Instance
    displayName: 'Browserless Chrome Instance'
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 2
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none
    - download: none
    - task: AzurePowerShell@4
      displayName: 'Create ACI'
      inputs:
        azureSubscription: '$(azureSubscription)'
        ScriptType: 'InlineScript'
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
        Inline: |
          # redeploy headless chrome as docker container instance
          Remove-AzContainerGroup -ResourceGroupName $(resourceGroup) -Name $(remoteChromeName)
          $envVars = @{
            'CONNECTION_TIMEOUT'='180000';
            'PREBOOT_CHROME'='true';
            'KEEP_ALIVE'='true';
            'CHROME_REFRESH_TIME'='360000';
            'DEBUG'='browserless/chrome*';
            'ENABLE_CORS'='true'
          }
          New-AzContainerGroup -ResourceGroupName $(resourceGroup) -Name $(remoteChromeName) -Location $(location) -Image browserless/chrome:1.33-puppeteer-1.19.0 -OsType Linux -DnsNameLabel $(remoteChromeName) -MemoryInGB 1.5 -Cpu 1 -Port @(3000) -EnvironmentVariable $envVars
        